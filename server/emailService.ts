import { MailService } from '@sendgrid/mail';

// Interface pour les param√®tres d'email
interface EmailParams {
  to: string;
  from: string;
  subject: string;
  text?: string;
  html?: string;
}

class EmailService {
  private mailService: MailService;
  private isConfigured: boolean = false;

  constructor() {
    this.mailService = new MailService();
    this.configure();
  }

  private configure() {
    const apiKey = process.env.SENDGRID_API_KEY;
    if (apiKey) {
      this.mailService.setApiKey(apiKey);
      this.isConfigured = true;
      console.log('‚úì SendGrid configured successfully');
    } else {
      console.log('‚ö† SendGrid API key not found. Email notifications will be logged only.');
    }
  }

  async sendEmail(params: EmailParams): Promise<boolean> {
    if (!this.isConfigured) {
      // Si SendGrid n'est pas configur√©, on simule l'envoi
      console.log(`üìß [SIMULATION] Email envoy√© √† ${params.to}`);
      console.log(`   Sujet: ${params.subject}`);
      console.log(`   Message: ${params.text || params.html}`);
      return true;
    }

    try {
      await this.mailService.send({
        to: params.to,
        from: params.from,
        subject: params.subject,
        text: params.text,
        html: params.html,
      });
      console.log(`‚úì Email envoy√© avec succ√®s √† ${params.to}`);
      return true;
    } catch (error) {
      console.error('‚ùå Erreur lors de l\'envoi d\'email:', error);
      return false;
    }
  }

  async sendAttendanceReminder(userEmail: string, userName: string): Promise<boolean> {
    const subject = 'Rappel de pointage - Geo DaTeam';
    const text = `
Bonjour ${userName},

Nous avons remarqu√© que vous n'avez pas encore point√© votre pr√©sence aujourd'hui.

N'oubliez pas de pointer votre arriv√©e sur l'application Geo DaTeam pour que votre pr√©sence soit enregistr√©e.

Si vous avez des questions, n'h√©sitez pas √† nous contacter.

Cordialement,
L'√©quipe Geo DaTeam
    `;

    const html = `
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <style>
        body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
        .container { max-width: 600px; margin: 0 auto; padding: 20px; }
        .header { background-color: #3b82f6; color: white; padding: 20px; text-align: center; }
        .content { padding: 20px; background-color: #f9f9f9; }
        .button { display: inline-block; padding: 12px 24px; background-color: #3b82f6; color: white; text-decoration: none; border-radius: 5px; margin: 20px 0; }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>Geo DaTeam</h1>
        </div>
        <div class="content">
            <h2>Rappel de pointage</h2>
            <p>Bonjour <strong>${userName}</strong>,</p>
            <p>Nous avons remarqu√© que vous n'avez pas encore point√© votre pr√©sence aujourd'hui.</p>
            <p>N'oubliez pas de pointer votre arriv√©e sur l'application Geo DaTeam pour que votre pr√©sence soit enregistr√©e.</p>
            <p>Si vous avez des questions, n'h√©sitez pas √† nous contacter.</p>
            <p>Cordialement,<br>L'√©quipe Geo DaTeam</p>
        </div>
    </div>
</body>
</html>
    `;

    return this.sendEmail({
      to: userEmail,
      from: process.env.FROM_EMAIL || 'noreply@geodateam.com',
      subject,
      text,
      html
    });
  }
}

export const emailService = new EmailService();